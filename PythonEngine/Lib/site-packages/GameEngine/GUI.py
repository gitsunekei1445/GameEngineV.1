 # Import line 2-4 on process
import sys
sys.path.append("..")
from glfw import init,create_window,poll_events,swap_buffers,window_should_close,terminate,set_window_pos,make_context_current
#Import line 6 on develop
#from ..glfw import init,create_window,poll_events,swap_buffers,window_should_close,terminate,set_window_pos,make_context_current
class Gui():
    gui = None
    def __init__(self):
        # variable defualt in Class GUI
        self.width = 400
        self.height = 300
        self.position_X = 400
        self.position_Y = 200
        self.fullscreen = None
        self.title = "GUI"
        self.share = None
        self.gui = None
        self.gui_Close = None
    # Setup and catch GLFW INIT Lisbrary
    if not init():
        raise Exception('GLFW can not be created !')
    def gui_create(self, width, height, title):
        if width < 1 and height < 1:
            raise Exception('Enter your Width or Height > 0 ')
        else:
            self.width = width
            self.height = height
            self.title = title
            self.gui = create_window(self.width, self.height, self.title, self.fullscreen, self.share)
            if not  self.gui:
                raise Exception('GLFW can not create gui !')
            set_window_pos(self.gui,self.position_X,self.position_Y)
            make_context_current(self.gui)

            return self.gui

    def gui_update(self):
        poll_events()
        if not self.gui:
            raise Exception('GUI is not create !')
        else:
            swap_buffers(self.gui)
            self.gui_Close = window_should_close(self.gui)

    def gui_terminate(self):
        terminate()

if __name__ == '__main__':
    gui  = Gui()
    winApp=gui.gui_create(400,300,'Test')

    while not gui.gui_Close:
        gui.gui_update()
    gui.gui_terminate()

